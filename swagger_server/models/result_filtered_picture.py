# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
import util


class ResultFilteredPicture(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, _class: str=None, picture: str=None):  # noqa: E501
        """ResultFilteredPicture - a model defined in Swagger

        :param id: The id of this ResultFilteredPicture.  # noqa: E501
        :type id: int
        :param _class: The _class of this ResultFilteredPicture.  # noqa: E501
        :type _class: str
        :param picture: The picture of this ResultFilteredPicture.  # noqa: E501
        :type picture: str
        """
        self.swagger_types = {
            'id': int,
            '_class': str,
            'picture': str
        }

        self.attribute_map = {
            'id': 'id',
            '_class': 'class',
            'picture': 'picture'
        }

        self._id = id
        self.__class = _class
        self._picture = picture

    @classmethod
    def from_dict(cls, dikt) -> 'ResultFilteredPicture':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResultFilteredPicture of this ResultFilteredPicture.  # noqa: E501
        :rtype: ResultFilteredPicture
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ResultFilteredPicture.


        :return: The id of this ResultFilteredPicture.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ResultFilteredPicture.


        :param id: The id of this ResultFilteredPicture.
        :type id: int
        """

        self._id = id

    @property
    def _class(self) -> str:
        """Gets the _class of this ResultFilteredPicture.

        Filtered class  # noqa: E501

        :return: The _class of this ResultFilteredPicture.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class: str):
        """Sets the _class of this ResultFilteredPicture.

        Filtered class  # noqa: E501

        :param _class: The _class of this ResultFilteredPicture.
        :type _class: str
        """

        self.__class = _class

    @property
    def picture(self) -> str:
        """Gets the picture of this ResultFilteredPicture.

        Picture  # noqa: E501

        :return: The picture of this ResultFilteredPicture.
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture: str):
        """Sets the picture of this ResultFilteredPicture.

        Picture  # noqa: E501

        :param picture: The picture of this ResultFilteredPicture.
        :type picture: str
        """

        self._picture = picture
